/**
 * NOTE: This class is auto generated by the swagger code generator program (2.4.10).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package com.tokens.api;

import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.validation.Valid;

import org.springframework.core.io.Resource;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.multipart.MultipartFile;

import com.tokens.model.ErrorResponse;
import com.tokens.model.UploadFileResponse;

import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import io.swagger.annotations.ApiParam;
import io.swagger.annotations.ApiResponse;
import io.swagger.annotations.ApiResponses;

@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2019-12-18T15:17:56.845-07:00")

@Api(value = "uploadDownloadTokens", description = "the uploadDownloadTokens API")
public interface UploadTokensApi {

	@ApiOperation(value = "", nickname = "uploadSingleTokens", notes = "Upload a file containing tokens", tags = {
			"tokens", })
	@ApiResponses(value = { @ApiResponse(code = 201, message = "Created"),
			@ApiResponse(code = 200, message = "Error", response = ErrorResponse.class) })
	@RequestMapping(value = "/uploadSingleTokens", produces = { "application/json" }, consumes = { "application/json",
			"multipart/form-data" }, method = RequestMethod.POST)
	UploadFileResponse uploadTokens(
			@ApiParam(value = "file detail") @Valid @RequestPart("file") MultipartFile tokenFile,
			@ApiParam(value = "Description of file contents.") @RequestParam(value = "note", required = false) String note);

	@ApiOperation(value = "", nickname = "uploadMultipleTokens", notes = "Upload multiple file containing tokens", tags = {
			"tokens", })
	@ApiResponses(value = { @ApiResponse(code = 201, message = "Created"),
			@ApiResponse(code = 200, message = "Error", response = ErrorResponse.class) })
	@RequestMapping(value = "/uploadMultipleTokens", produces = { "application/json" }, consumes = { "application/json",
			"multipart/form-data" }, method = RequestMethod.POST)
	List<UploadFileResponse> uploadMultipleTokens(MultipartFile[] files);

	@ApiOperation(value = "", nickname = "downloadTokens", notes = "Download file containing tokens", tags = {
			"tokens", })
	@ApiResponses(value = { @ApiResponse(code = 200, message = "Success") })
	@RequestMapping(value = "/downloadTokens/{fileName:.+}", produces = { "application/json" }, method = RequestMethod.GET)
	ResponseEntity<Resource> downloadFile(String fileName, HttpServletRequest request);

}
